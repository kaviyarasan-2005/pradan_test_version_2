import { create } from 'zustand';

export interface FormData {
  form_id: number;
  user_id: number;
  form_type: number;
  farmer_name: string;
  age: string;
  form_mobile: number;
  district: string;
  block: string;
  panchayat: string;
  hamlet: string;
  id_type: string;
  id_number: string;
  gender: string;
  spouse: string;
  type_of_households: string;
  h_members: number;
  hh_occupation: string;
  special_catog: string;
  caste: string;
  house_owner: string;
  type_of_house: string;
  drinking_water: string;
  potability: string;
  domestic_water: string;
  toilet_avail: string;
  toilet_cond: string;
  household_education: string;
  created_at: string;
  lat: string;
  lon: string;
  mcode: string;
  status: number;
  user_name: string;
  user_email: string;
  user_password: string;
  user_role: string;
  user_mobile: number;
  user_date_of_joining: string;
  user_location: string;
  user_photo: string;
  file_id: number | null;
  file_form_id: number | null;
  identity: any;
  geotag: any;
  patta: any;
  fmb: any;
  file_photo: any;
  passbook: any;
  passbook_postfunding: any;
  bank_detail_id: number;
  bank_form_id: number;
  account_holder_name: string;
  account_number: number;
  bank_name: string;
  branch: string;
  ifsc_code: string;
  farmer_ack: string;
  form_land_ownership: string;
  form_land_well_irrigation: string;
  form_land_area_irrigated: string;
  form_land_irrigated_lands: string;
  form_land_patta: string;
  form_land_total_area: string;
  form_land_taluk: string;
  form_land_firka: string;
  form_land_revenue: string;
  form_land_crop_season: string;
  form_land_livestocks: string;
  form_land_sf_number: string;
  form_land_soil_type: string;
  form_land_land_to_benefit: string;
  form_land_date_of_ins: string;
  form_land_area_benefited: string;
  form_land_type_of_work: string;
  form_land_any_other_works: string;
  form_land_p_contribution: string;
  form_land_f_contribution: string;
  form_land_total_est: string;
  form_land_field_insp: any;
  form_land_site_app: any;
  form_land_date_of_app: any;
  form_land_area_benefited_postfunding: any;
  form_land_verified_by: any;
  farm_pond_ownership: any;
  farm_pond_well_irrigation: any;
  farm_pond_area_irrigated: any;
  farm_pond_irrigated_lands: any;
  farm_pond_patta: any;
  farm_pond_total_area: any;
  farm_pond_taluk: any;
  farm_pond_firka: any;
  farm_pond_revenue: any;
  farm_pond_crop_season: any;
  farm_pond_livestocks: any;
  farm_pond_sf_number: any;
  farm_pond_soil_type: any;
  farm_pond_land_to_benefit: any;
  farm_pond_date_of_ins: any;
  farm_pond_length: any;
  farm_pond_breadth: any;
  farm_pond_depth: any;
  farm_pond_volume: any;
  farm_pond_p_contribution: any;
  farm_pond_f_contribution: any;
  farm_pond_total_est: any;
  farm_pond_area_benefited: any;
  farm_pond_field_insp: any;
  farm_pond_site_app: any;
  farm_pond_date_of_app: any;
  farm_pond_len_pf: any;
  farm_pond_bre_pf: any;
  farm_pond_dep_pf: any;
  farm_pond_vol_pf: any;
  farm_pond_area_benefited_postfunding: any;
  farm_pond_verified_by: any;
  plantation_ownership: any;
  plantation_well_irrigation: any;
  plantation_area_irrigated: any;
  plantation_irrigated_lands: any;
  plantation_patta: any;
  plantation_total_area: any;
  plantation_taluk: any;
  plantation_firka: any;
  plantation_revenue: any;
  plantation_crop_season: any;
  plantation_livestocks: any;
  plantation_sf_number: any;
  plantation_soil_type: any;
  plantation_land_to_benefit: any;
  plantation_date_of_ins: any;
  plantation_area_benefited_by_proposal: any;
  plantation_any_other_works: any;
  plantation_p_contribution: any;
  plantation_f_contribution: any;
  plantation_total_est: any;
  plantation_field_insp: any;
  plantation_site_app: any;
  plantation_date_of_app: any;
  plantation_plantaions: any;
  plantation_nos: any;
  plantation_price: any;
  plantation_other_exp: any;
  plantation_tot_nos: any;
  plantation_tot_price: any;
  plantation_verified_by: any;
}

interface IdFormStore {
  Idforms: FormData[];
  setIdform: (data: FormData[]) => void;
  addForm: (form: FormData) => void;
}
export const IdFormStore = create<IdFormStore>((set) => ({
  Idforms: [],
  setIdform: (data) => set({ Idforms: data }),
  addForm: (form) =>
    set((state) => ({
      Idforms: [...state.Idforms, form],
    })),
}));
